version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-openmanus}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  cache:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"

  meili:
    image: getmeili/meilisearch:v1.3
    environment:
      MEILI_NO_ANALYTICS: "true"
    volumes:
      - meili_data:/meili_data
    ports:
      - "7700:7700"

  # Keycloak for authentication (optional)
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"

  # API service
  api:
    build:
      context: services/api
      dockerfile: Dockerfile
    depends_on:
      - db
      - cache
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=${REDIS_URL}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MODEL_PROVIDER=${MODEL_PROVIDER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OLLAMA_HOST=${OLLAMA_HOST}
      - VLLM_HOST=${VLLM_HOST}
      - LM_STUDIO_HOST=${LM_STUDIO_HOST}
      - AUTH_SERVER_URL=${AUTH_SERVER_URL}
      - AUTH_REALM=${AUTH_REALM}
      - AUTH_CLIENT_ID=${AUTH_CLIENT_ID}
      - AUTH_CLIENT_SECRET=${AUTH_CLIENT_SECRET}
    ports:
      - "8000:8000"

  orchestrator:
    build:
      context: services/orchestrator
      dockerfile: Dockerfile
    depends_on:
      - api
      - cache
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MODEL_PROVIDER=${MODEL_PROVIDER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OLLAMA_HOST=${OLLAMA_HOST}
      - VLLM_HOST=${VLLM_HOST}
      - LM_STUDIO_HOST=${LM_STUDIO_HOST}
    ports:
      - "8500:8500"

  worker:
    build:
      context: services/worker
      dockerfile: Dockerfile
    depends_on:
      - cache
      - db
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    deploy:
      replicas: 1

  frontend:
    build:
      context: apps/frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
    depends_on:
      - api
    ports:
      - "3000:3000"

  # Observability stack (optional)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.86.0
    command:
      - "--config=/etc/otelcol/config.yaml"
    volumes:
      - ./infra/compose/otel-collector-config.yaml:/etc/otelcol/config.yaml
    ports:
      - "4317:4317"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./infra/compose/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  db_data:
  minio_data:
  meili_data:

